@model PCartWeb.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1" }))
{
    @Html.AntiForgeryToken()
    <head>
        <link rel="stylesheet" href="~/Content/css/customStyle.css" />
    </head>

    <div class="container custom-container">
        <div class="row">
            <div class="col-md-12 custom-form-1">
                <h4>Start your shopping by signing up!</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @ViewBag.Message
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "example@gmail.com", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                <input type="file" name="ImageFile" />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { placeholder = "09*********", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Bdate, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                <input type="date" id="Bdate" name="Bdate" class="form-control" placeholder="dd/mm/yyyy" />
                                <p class="text-danger" style="display: none;" id="ErrorBDate"></p>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(vm => vm.Gender, Model.GenderList, "-Please Select-", htmlAttributes: new { @class = "form-control" })
                                <p class="text-danger" style="display: none;" id="GenderError"></p>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group text-center">
                    <input type="submit" value="Register" class="btnSubmit" />
                </div>

            </div>
        </div>
    </div>
}
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCCnmMReV03W96lvqJVwbG7nFOTkuUDaX8"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            componentRestrictions: { country: "ph" }
        };

        var input = document.getElementById('Address');
        var places = new google.maps.places.Autocomplete(input, options);
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            $("#Longitude").val("" + place.geometry.location.lng());
            $("#Latitude").val("" + place.geometry.location.lat());
        });

    });
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script type="text/javascript">
    $(document).ready(function () {
        flatpickr("#Bdate", {
            dateFormat: 'j/n/Y',
            minDate: "1/1/1905",
            maxDate: "today"
        });

        $('#form1').submit(function (e) {
            e.preventDefault();
            var _this = $(this);
            var gender = $("#Gender").val();
            var bdate = $("#Bdate").val();
            var date = bdate.split('/');
            var currDate = new Date();
            var year = currDate.getFullYear() - 18;

            if (bdate == "" || (gender != "Male" && gender != "Female" && gender != "LGBTQ" && gender != "Rather Not Say") || date[2] > year) {
                if (bdate == "") {
                    document.getElementById("ErrorBDate").style.display = "block";
                    document.getElementById("ErrorBDate").innerHTML = "This field is required. Kindly input your birthdate.";
                }
                else if (date[2] > year) {
                    document.getElementById("ErrorBDate").style.display = "block";
                    document.getElementById("ErrorBDate").innerHTML = "You must be 18 to register.";
                }
                else {
                    document.getElementById("ErrorBDate").style.display = "none";
                }

                if (gender != "Male" && gender != "Female" && gender != "LGBTQ" && gender != "Rather Not Say") {
                    document.getElementById("GenderError").style.display = "block";
                    document.getElementById("GenderError").innerHTML = "Gender is invalid. Kindly choose from the list.";
                }
                else {
                    document.getElementById("GenderError").style.display = "none";
                }

                $("#Address").val("");
                $("#Longitude").val("");
                $("#Latitude").val("");
            }
            else {
                _this.unbind('submit').submit();
            }
        });
    });
</script>