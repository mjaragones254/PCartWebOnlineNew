@model PCartWeb.Models.RegisterCoopAdminViewmodel

@{
    ViewBag.Title = "Co-op Registration";
}

@using (Html.BeginForm("RegisterCoopadmin", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id = "form1" }))
{
    @Html.AntiForgeryToken()
    <head>
        <link rel="stylesheet" href="~/Content/css/customStyle.css" />
        <style type="text/css">
            p {
                font-size: 1.5rem;
            }

            h4 {
                color: white;
            }
        </style>
    </head>

    <div class="container custom-container">
        <div class="row">
            <div class="col-md-12 custom-form-1">
                <div class="form-horizontal">
                    <h4 class="w-100 bg-dark py-3 text-center">Register Co-op</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <form>
                        <fieldset>
                            <div class="container">
                                <div class="row">
                                    <div class="col-sm">
                                        <p class="text-sm-left"><span class="badge badge-secondary">Co-op Details</span></p>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.CoopName, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CoopName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CoopName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.CoopAddress, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CoopAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CoopAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.CoopContact, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CoopContact, new { htmlAttributes = new { @class = "form-control", placeholder = "09*********" } })
                                                @Html.ValidationMessageFor(model => model.CoopContact, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm"></div>
                                </div>
                                <hr style="border: double" />
                                <p class="text-sm-left"><span class="badge badge-secondary">Co-op Admin / Co-op Contact Person</span></p>
                                <div class="row">
                                    <div class="col-sm">
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                <input name="ImageFile" type="file" id="formFile">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "example@gmail.com" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", placeholder = "09*********" } })
                                                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Bdate, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                <input type="date" id="Bdate" name="Bdate" class="form-control" placeholder="dd/mm/yyyy" />
                                                <p class="text-danger" style="display: none; font-size: 16px;" id="ErrorBDate"></p>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(vm => vm.Gender, Model.GenderList, "-Please Select-", htmlAttributes: new { @class = "form-control" })
                                                <p class="text-danger" style="display: none; font-size: 16px;" id="GenderError"></p>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.CStatus, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(vm => vm.CStatus, Model.CStatusList, "-Please Select-", htmlAttributes: new { @class = "form-control" })
                                                <p class="text-danger"style="display: none; font-size: 16px;" id="StatusError"></p>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-5" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.HiddenFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.HiddenFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.HiddenFor(model => model.Latitude1, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Latitude1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.HiddenFor(model => model.Longitude1, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Longitude1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div>
                                            @Html.HiddenFor(m => m.RememberMe)
                                        </div>
                                        <div class="container">
                                            <div class="row">
                                                <div class="col">
                                                </div>
                                                <div class="col">
                                                    <div class="form-group row">
                                                        <div>
                                                            <input type="submit" value="Apply and Proceed" class="btn btn-primary" style="width:200px" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCCnmMReV03W96lvqJVwbG7nFOTkuUDaX8"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            componentRestrictions: { country: "ph" }
        };
        var input = document.getElementById('Address');
        var places = new google.maps.places.Autocomplete(input, options);
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            $("#Longitude").val("" + place.geometry.location.lng());
            $("#Latitude").val("" + place.geometry.location.lat());
        });

    });
</script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var options1 = {
            componentRestrictions: { country: "ph" }
        };
        var input1 = document.getElementById('CoopAddress');
        var places1 = new google.maps.places.Autocomplete(input1, options1);
        google.maps.event.addListener(places1, 'place_changed', function () {
            var place1 = places1.getPlace();
            $("#Longitude1").val("" + place1.geometry.location.lng());
            $("#Latitude1").val("" + place1.geometry.location.lat());
        });

    });
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script type="text/javascript">
    $(document).ready(function () {
        flatpickr("#Bdate", {
            dateFormat: 'j/n/Y',
            minDate: "1/1/1905",
            maxDate: "today"
        });

        $('#form1').submit(function (e) {
            e.preventDefault();
            var _this = $(this);
            var bdate = $("#Bdate").val();
            var gender = $("#Gender").val();
            var maritalStat = $("#CStatus").val();
            var date = bdate.split('/');
            var currDate = new Date();
            var year = currDate.getFullYear() - 18;

            if (bdate == "" || (gender != "Male" && gender != "Female" && gender != "LGBTQ" && gender != "Rather Not Say") || date[2] > year || (maritalStat != "Single" && maritalStat != "Married" && maritalStat != "Divorced" && maritalStat != "Separated" && maritalStat != "Widowed")) {
                if (bdate == "") {
                    document.getElementById("ErrorBDate").style.display = "block";
                    document.getElementById("ErrorBDate").innerHTML = "This field is required. Kindly input your birthdate.";
                }
                else if (date[2] > year) {
                    document.getElementById("ErrorBDate").style.display = "block";
                    document.getElementById("ErrorBDate").innerHTML = "You must be 18 to register.";
                }
                else {
                    document.getElementById("ErrorBDate").style.display = "none";
                }

                if (gender != "Male" && gender != "Female" && gender != "LGBTQ" && gender != "Rather Not Say") {
                    document.getElementById("GenderError").style.display = "block";
                    document.getElementById("GenderError").innerHTML = "Gender is invalid. Kindly choose from the list.";
                }
                else {
                    document.getElementById("GenderError").style.display = "none";
                }

                if (maritalStat != "Single" && maritalStat != "Married" && maritalStat != "Divorced" && maritalStat != "Separated" && maritalStat != "Widowed") {
                    document.getElementById("StatusError").style.display = "block";
                    document.getElementById("StatusError").innerHTML = "Marital status is invalid. Kindly choose from the list.";
                }
                else {
                    document.getElementById("StatusError").style.display = "none";
                }

                $("#Address").val("");
                $("#Longitude").val("");
                $("#Latitude").val("");
                $("#CoopAddress").val("");
                $("#Longitude1").val("");
                $("#Latitude1").val("");
            }
            else {
                _this.unbind('submit').submit();
            }
        });
    });
</script>
